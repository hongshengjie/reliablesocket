// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: webpubsub.client.proto

package webpubsub

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpstreamMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*UpstreamMessage_SendToGroupMessage_
	//	*UpstreamMessage_EventMessage_
	//	*UpstreamMessage_JoinGroupMessage_
	//	*UpstreamMessage_LeaveGroupMessage_
	//	*UpstreamMessage_SequenceAckMessage_
	Message       isUpstreamMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpstreamMessage) Reset() {
	*x = UpstreamMessage{}
	mi := &file_webpubsub_client_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamMessage) ProtoMessage() {}

func (x *UpstreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_webpubsub_client_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamMessage.ProtoReflect.Descriptor instead.
func (*UpstreamMessage) Descriptor() ([]byte, []int) {
	return file_webpubsub_client_proto_rawDescGZIP(), []int{0}
}

func (x *UpstreamMessage) GetMessage() isUpstreamMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *UpstreamMessage) GetSendToGroupMessage() *UpstreamMessage_SendToGroupMessage {
	if x != nil {
		if x, ok := x.Message.(*UpstreamMessage_SendToGroupMessage_); ok {
			return x.SendToGroupMessage
		}
	}
	return nil
}

func (x *UpstreamMessage) GetEventMessage() *UpstreamMessage_EventMessage {
	if x != nil {
		if x, ok := x.Message.(*UpstreamMessage_EventMessage_); ok {
			return x.EventMessage
		}
	}
	return nil
}

func (x *UpstreamMessage) GetJoinGroupMessage() *UpstreamMessage_JoinGroupMessage {
	if x != nil {
		if x, ok := x.Message.(*UpstreamMessage_JoinGroupMessage_); ok {
			return x.JoinGroupMessage
		}
	}
	return nil
}

func (x *UpstreamMessage) GetLeaveGroupMessage() *UpstreamMessage_LeaveGroupMessage {
	if x != nil {
		if x, ok := x.Message.(*UpstreamMessage_LeaveGroupMessage_); ok {
			return x.LeaveGroupMessage
		}
	}
	return nil
}

func (x *UpstreamMessage) GetSequenceAckMessage() *UpstreamMessage_SequenceAckMessage {
	if x != nil {
		if x, ok := x.Message.(*UpstreamMessage_SequenceAckMessage_); ok {
			return x.SequenceAckMessage
		}
	}
	return nil
}

type isUpstreamMessage_Message interface {
	isUpstreamMessage_Message()
}

type UpstreamMessage_SendToGroupMessage_ struct {
	SendToGroupMessage *UpstreamMessage_SendToGroupMessage `protobuf:"bytes,1,opt,name=send_to_group_message,json=sendToGroupMessage,proto3,oneof"`
}

type UpstreamMessage_EventMessage_ struct {
	EventMessage *UpstreamMessage_EventMessage `protobuf:"bytes,5,opt,name=event_message,json=eventMessage,proto3,oneof"`
}

type UpstreamMessage_JoinGroupMessage_ struct {
	JoinGroupMessage *UpstreamMessage_JoinGroupMessage `protobuf:"bytes,6,opt,name=join_group_message,json=joinGroupMessage,proto3,oneof"`
}

type UpstreamMessage_LeaveGroupMessage_ struct {
	LeaveGroupMessage *UpstreamMessage_LeaveGroupMessage `protobuf:"bytes,7,opt,name=leave_group_message,json=leaveGroupMessage,proto3,oneof"`
}

type UpstreamMessage_SequenceAckMessage_ struct {
	SequenceAckMessage *UpstreamMessage_SequenceAckMessage `protobuf:"bytes,8,opt,name=sequence_ack_message,json=sequenceAckMessage,proto3,oneof"`
}

func (*UpstreamMessage_SendToGroupMessage_) isUpstreamMessage_Message() {}

func (*UpstreamMessage_EventMessage_) isUpstreamMessage_Message() {}

func (*UpstreamMessage_JoinGroupMessage_) isUpstreamMessage_Message() {}

func (*UpstreamMessage_LeaveGroupMessage_) isUpstreamMessage_Message() {}

func (*UpstreamMessage_SequenceAckMessage_) isUpstreamMessage_Message() {}

type DownstreamMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*DownstreamMessage_AckMessage_
	//	*DownstreamMessage_DataMessage_
	//	*DownstreamMessage_SystemMessage_
	Message       isDownstreamMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownstreamMessage) Reset() {
	*x = DownstreamMessage{}
	mi := &file_webpubsub_client_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownstreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamMessage) ProtoMessage() {}

func (x *DownstreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_webpubsub_client_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamMessage.ProtoReflect.Descriptor instead.
func (*DownstreamMessage) Descriptor() ([]byte, []int) {
	return file_webpubsub_client_proto_rawDescGZIP(), []int{1}
}

func (x *DownstreamMessage) GetMessage() isDownstreamMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *DownstreamMessage) GetAckMessage() *DownstreamMessage_AckMessage {
	if x != nil {
		if x, ok := x.Message.(*DownstreamMessage_AckMessage_); ok {
			return x.AckMessage
		}
	}
	return nil
}

func (x *DownstreamMessage) GetDataMessage() *DownstreamMessage_DataMessage {
	if x != nil {
		if x, ok := x.Message.(*DownstreamMessage_DataMessage_); ok {
			return x.DataMessage
		}
	}
	return nil
}

func (x *DownstreamMessage) GetSystemMessage() *DownstreamMessage_SystemMessage {
	if x != nil {
		if x, ok := x.Message.(*DownstreamMessage_SystemMessage_); ok {
			return x.SystemMessage
		}
	}
	return nil
}

type isDownstreamMessage_Message interface {
	isDownstreamMessage_Message()
}

type DownstreamMessage_AckMessage_ struct {
	AckMessage *DownstreamMessage_AckMessage `protobuf:"bytes,1,opt,name=ack_message,json=ackMessage,proto3,oneof"`
}

type DownstreamMessage_DataMessage_ struct {
	DataMessage *DownstreamMessage_DataMessage `protobuf:"bytes,2,opt,name=data_message,json=dataMessage,proto3,oneof"`
}

type DownstreamMessage_SystemMessage_ struct {
	SystemMessage *DownstreamMessage_SystemMessage `protobuf:"bytes,3,opt,name=system_message,json=systemMessage,proto3,oneof"`
}

func (*DownstreamMessage_AckMessage_) isDownstreamMessage_Message() {}

func (*DownstreamMessage_DataMessage_) isDownstreamMessage_Message() {}

func (*DownstreamMessage_SystemMessage_) isDownstreamMessage_Message() {}

type MessageData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*MessageData_TextData
	//	*MessageData_BinaryData
	//	*MessageData_ProtobufData
	//	*MessageData_JsonData
	Data          isMessageData_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageData) Reset() {
	*x = MessageData{}
	mi := &file_webpubsub_client_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageData) ProtoMessage() {}

func (x *MessageData) ProtoReflect() protoreflect.Message {
	mi := &file_webpubsub_client_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageData.ProtoReflect.Descriptor instead.
func (*MessageData) Descriptor() ([]byte, []int) {
	return file_webpubsub_client_proto_rawDescGZIP(), []int{2}
}

func (x *MessageData) GetData() isMessageData_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MessageData) GetTextData() string {
	if x != nil {
		if x, ok := x.Data.(*MessageData_TextData); ok {
			return x.TextData
		}
	}
	return ""
}

func (x *MessageData) GetBinaryData() []byte {
	if x != nil {
		if x, ok := x.Data.(*MessageData_BinaryData); ok {
			return x.BinaryData
		}
	}
	return nil
}

func (x *MessageData) GetProtobufData() *anypb.Any {
	if x != nil {
		if x, ok := x.Data.(*MessageData_ProtobufData); ok {
			return x.ProtobufData
		}
	}
	return nil
}

func (x *MessageData) GetJsonData() string {
	if x != nil {
		if x, ok := x.Data.(*MessageData_JsonData); ok {
			return x.JsonData
		}
	}
	return ""
}

type isMessageData_Data interface {
	isMessageData_Data()
}

type MessageData_TextData struct {
	TextData string `protobuf:"bytes,1,opt,name=text_data,json=textData,proto3,oneof"`
}

type MessageData_BinaryData struct {
	BinaryData []byte `protobuf:"bytes,2,opt,name=binary_data,json=binaryData,proto3,oneof"`
}

type MessageData_ProtobufData struct {
	ProtobufData *anypb.Any `protobuf:"bytes,3,opt,name=protobuf_data,json=protobufData,proto3,oneof"`
}

type MessageData_JsonData struct {
	JsonData string `protobuf:"bytes,4,opt,name=json_data,json=jsonData,proto3,oneof"`
}

func (*MessageData_TextData) isMessageData_Data() {}

func (*MessageData_BinaryData) isMessageData_Data() {}

func (*MessageData_ProtobufData) isMessageData_Data() {}

func (*MessageData_JsonData) isMessageData_Data() {}

type UpstreamMessage_SendToGroupMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Group         string                 `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	AckId         *int64                 `protobuf:"varint,2,opt,name=ack_id,json=ackId,proto3,oneof" json:"ack_id,omitempty"`
	Data          *MessageData           `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	NoEcho        *bool                  `protobuf:"varint,4,opt,name=no_echo,json=noEcho,proto3,oneof" json:"no_echo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpstreamMessage_SendToGroupMessage) Reset() {
	*x = UpstreamMessage_SendToGroupMessage{}
	mi := &file_webpubsub_client_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamMessage_SendToGroupMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamMessage_SendToGroupMessage) ProtoMessage() {}

func (x *UpstreamMessage_SendToGroupMessage) ProtoReflect() protoreflect.Message {
	mi := &file_webpubsub_client_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamMessage_SendToGroupMessage.ProtoReflect.Descriptor instead.
func (*UpstreamMessage_SendToGroupMessage) Descriptor() ([]byte, []int) {
	return file_webpubsub_client_proto_rawDescGZIP(), []int{0, 0}
}

func (x *UpstreamMessage_SendToGroupMessage) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *UpstreamMessage_SendToGroupMessage) GetAckId() int64 {
	if x != nil && x.AckId != nil {
		return *x.AckId
	}
	return 0
}

func (x *UpstreamMessage_SendToGroupMessage) GetData() *MessageData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpstreamMessage_SendToGroupMessage) GetNoEcho() bool {
	if x != nil && x.NoEcho != nil {
		return *x.NoEcho
	}
	return false
}

type UpstreamMessage_EventMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         string                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Data          *MessageData           `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	AckId         *int64                 `protobuf:"varint,3,opt,name=ack_id,json=ackId,proto3,oneof" json:"ack_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpstreamMessage_EventMessage) Reset() {
	*x = UpstreamMessage_EventMessage{}
	mi := &file_webpubsub_client_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamMessage_EventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamMessage_EventMessage) ProtoMessage() {}

func (x *UpstreamMessage_EventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_webpubsub_client_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamMessage_EventMessage.ProtoReflect.Descriptor instead.
func (*UpstreamMessage_EventMessage) Descriptor() ([]byte, []int) {
	return file_webpubsub_client_proto_rawDescGZIP(), []int{0, 1}
}

func (x *UpstreamMessage_EventMessage) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *UpstreamMessage_EventMessage) GetData() *MessageData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpstreamMessage_EventMessage) GetAckId() int64 {
	if x != nil && x.AckId != nil {
		return *x.AckId
	}
	return 0
}

type UpstreamMessage_JoinGroupMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Group         string                 `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	AckId         *int64                 `protobuf:"varint,2,opt,name=ack_id,json=ackId,proto3,oneof" json:"ack_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpstreamMessage_JoinGroupMessage) Reset() {
	*x = UpstreamMessage_JoinGroupMessage{}
	mi := &file_webpubsub_client_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamMessage_JoinGroupMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamMessage_JoinGroupMessage) ProtoMessage() {}

func (x *UpstreamMessage_JoinGroupMessage) ProtoReflect() protoreflect.Message {
	mi := &file_webpubsub_client_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamMessage_JoinGroupMessage.ProtoReflect.Descriptor instead.
func (*UpstreamMessage_JoinGroupMessage) Descriptor() ([]byte, []int) {
	return file_webpubsub_client_proto_rawDescGZIP(), []int{0, 2}
}

func (x *UpstreamMessage_JoinGroupMessage) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *UpstreamMessage_JoinGroupMessage) GetAckId() int64 {
	if x != nil && x.AckId != nil {
		return *x.AckId
	}
	return 0
}

type UpstreamMessage_LeaveGroupMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Group         string                 `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	AckId         *int64                 `protobuf:"varint,2,opt,name=ack_id,json=ackId,proto3,oneof" json:"ack_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpstreamMessage_LeaveGroupMessage) Reset() {
	*x = UpstreamMessage_LeaveGroupMessage{}
	mi := &file_webpubsub_client_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamMessage_LeaveGroupMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamMessage_LeaveGroupMessage) ProtoMessage() {}

func (x *UpstreamMessage_LeaveGroupMessage) ProtoReflect() protoreflect.Message {
	mi := &file_webpubsub_client_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamMessage_LeaveGroupMessage.ProtoReflect.Descriptor instead.
func (*UpstreamMessage_LeaveGroupMessage) Descriptor() ([]byte, []int) {
	return file_webpubsub_client_proto_rawDescGZIP(), []int{0, 3}
}

func (x *UpstreamMessage_LeaveGroupMessage) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *UpstreamMessage_LeaveGroupMessage) GetAckId() int64 {
	if x != nil && x.AckId != nil {
		return *x.AckId
	}
	return 0
}

type UpstreamMessage_SequenceAckMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SequenceId    int64                  `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId,proto3" json:"sequence_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpstreamMessage_SequenceAckMessage) Reset() {
	*x = UpstreamMessage_SequenceAckMessage{}
	mi := &file_webpubsub_client_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamMessage_SequenceAckMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamMessage_SequenceAckMessage) ProtoMessage() {}

func (x *UpstreamMessage_SequenceAckMessage) ProtoReflect() protoreflect.Message {
	mi := &file_webpubsub_client_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamMessage_SequenceAckMessage.ProtoReflect.Descriptor instead.
func (*UpstreamMessage_SequenceAckMessage) Descriptor() ([]byte, []int) {
	return file_webpubsub_client_proto_rawDescGZIP(), []int{0, 4}
}

func (x *UpstreamMessage_SequenceAckMessage) GetSequenceId() int64 {
	if x != nil {
		return x.SequenceId
	}
	return 0
}

type DownstreamMessage_AckMessage struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	AckId         int64                                      `protobuf:"varint,1,opt,name=ack_id,json=ackId,proto3" json:"ack_id,omitempty"`
	Success       bool                                       `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error         *DownstreamMessage_AckMessage_ErrorMessage `protobuf:"bytes,3,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownstreamMessage_AckMessage) Reset() {
	*x = DownstreamMessage_AckMessage{}
	mi := &file_webpubsub_client_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownstreamMessage_AckMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamMessage_AckMessage) ProtoMessage() {}

func (x *DownstreamMessage_AckMessage) ProtoReflect() protoreflect.Message {
	mi := &file_webpubsub_client_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamMessage_AckMessage.ProtoReflect.Descriptor instead.
func (*DownstreamMessage_AckMessage) Descriptor() ([]byte, []int) {
	return file_webpubsub_client_proto_rawDescGZIP(), []int{1, 0}
}

func (x *DownstreamMessage_AckMessage) GetAckId() int64 {
	if x != nil {
		return x.AckId
	}
	return 0
}

func (x *DownstreamMessage_AckMessage) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DownstreamMessage_AckMessage) GetError() *DownstreamMessage_AckMessage_ErrorMessage {
	if x != nil {
		return x.Error
	}
	return nil
}

type DownstreamMessage_DataMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Group         *string                `protobuf:"bytes,2,opt,name=group,proto3,oneof" json:"group,omitempty"`
	Data          *MessageData           `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	SequenceId    *int64                 `protobuf:"varint,4,opt,name=sequence_id,json=sequenceId,proto3,oneof" json:"sequence_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownstreamMessage_DataMessage) Reset() {
	*x = DownstreamMessage_DataMessage{}
	mi := &file_webpubsub_client_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownstreamMessage_DataMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamMessage_DataMessage) ProtoMessage() {}

func (x *DownstreamMessage_DataMessage) ProtoReflect() protoreflect.Message {
	mi := &file_webpubsub_client_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamMessage_DataMessage.ProtoReflect.Descriptor instead.
func (*DownstreamMessage_DataMessage) Descriptor() ([]byte, []int) {
	return file_webpubsub_client_proto_rawDescGZIP(), []int{1, 1}
}

func (x *DownstreamMessage_DataMessage) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *DownstreamMessage_DataMessage) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *DownstreamMessage_DataMessage) GetData() *MessageData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DownstreamMessage_DataMessage) GetSequenceId() int64 {
	if x != nil && x.SequenceId != nil {
		return *x.SequenceId
	}
	return 0
}

type DownstreamMessage_SystemMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*DownstreamMessage_SystemMessage_ConnectedMessage_
	//	*DownstreamMessage_SystemMessage_DisconnectedMessage_
	Message       isDownstreamMessage_SystemMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownstreamMessage_SystemMessage) Reset() {
	*x = DownstreamMessage_SystemMessage{}
	mi := &file_webpubsub_client_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownstreamMessage_SystemMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamMessage_SystemMessage) ProtoMessage() {}

func (x *DownstreamMessage_SystemMessage) ProtoReflect() protoreflect.Message {
	mi := &file_webpubsub_client_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamMessage_SystemMessage.ProtoReflect.Descriptor instead.
func (*DownstreamMessage_SystemMessage) Descriptor() ([]byte, []int) {
	return file_webpubsub_client_proto_rawDescGZIP(), []int{1, 2}
}

func (x *DownstreamMessage_SystemMessage) GetMessage() isDownstreamMessage_SystemMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *DownstreamMessage_SystemMessage) GetConnectedMessage() *DownstreamMessage_SystemMessage_ConnectedMessage {
	if x != nil {
		if x, ok := x.Message.(*DownstreamMessage_SystemMessage_ConnectedMessage_); ok {
			return x.ConnectedMessage
		}
	}
	return nil
}

func (x *DownstreamMessage_SystemMessage) GetDisconnectedMessage() *DownstreamMessage_SystemMessage_DisconnectedMessage {
	if x != nil {
		if x, ok := x.Message.(*DownstreamMessage_SystemMessage_DisconnectedMessage_); ok {
			return x.DisconnectedMessage
		}
	}
	return nil
}

type isDownstreamMessage_SystemMessage_Message interface {
	isDownstreamMessage_SystemMessage_Message()
}

type DownstreamMessage_SystemMessage_ConnectedMessage_ struct {
	ConnectedMessage *DownstreamMessage_SystemMessage_ConnectedMessage `protobuf:"bytes,1,opt,name=connected_message,json=connectedMessage,proto3,oneof"`
}

type DownstreamMessage_SystemMessage_DisconnectedMessage_ struct {
	DisconnectedMessage *DownstreamMessage_SystemMessage_DisconnectedMessage `protobuf:"bytes,2,opt,name=disconnected_message,json=disconnectedMessage,proto3,oneof"`
}

func (*DownstreamMessage_SystemMessage_ConnectedMessage_) isDownstreamMessage_SystemMessage_Message() {
}

func (*DownstreamMessage_SystemMessage_DisconnectedMessage_) isDownstreamMessage_SystemMessage_Message() {
}

type DownstreamMessage_AckMessage_ErrorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownstreamMessage_AckMessage_ErrorMessage) Reset() {
	*x = DownstreamMessage_AckMessage_ErrorMessage{}
	mi := &file_webpubsub_client_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownstreamMessage_AckMessage_ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamMessage_AckMessage_ErrorMessage) ProtoMessage() {}

func (x *DownstreamMessage_AckMessage_ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_webpubsub_client_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamMessage_AckMessage_ErrorMessage.ProtoReflect.Descriptor instead.
func (*DownstreamMessage_AckMessage_ErrorMessage) Descriptor() ([]byte, []int) {
	return file_webpubsub_client_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *DownstreamMessage_AckMessage_ErrorMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DownstreamMessage_AckMessage_ErrorMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DownstreamMessage_SystemMessage_ConnectedMessage struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId      string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	UserId            string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ReconnectionToken string                 `protobuf:"bytes,3,opt,name=reconnection_token,json=reconnectionToken,proto3" json:"reconnection_token,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DownstreamMessage_SystemMessage_ConnectedMessage) Reset() {
	*x = DownstreamMessage_SystemMessage_ConnectedMessage{}
	mi := &file_webpubsub_client_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownstreamMessage_SystemMessage_ConnectedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamMessage_SystemMessage_ConnectedMessage) ProtoMessage() {}

func (x *DownstreamMessage_SystemMessage_ConnectedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_webpubsub_client_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamMessage_SystemMessage_ConnectedMessage.ProtoReflect.Descriptor instead.
func (*DownstreamMessage_SystemMessage_ConnectedMessage) Descriptor() ([]byte, []int) {
	return file_webpubsub_client_proto_rawDescGZIP(), []int{1, 2, 0}
}

func (x *DownstreamMessage_SystemMessage_ConnectedMessage) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *DownstreamMessage_SystemMessage_ConnectedMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DownstreamMessage_SystemMessage_ConnectedMessage) GetReconnectionToken() string {
	if x != nil {
		return x.ReconnectionToken
	}
	return ""
}

type DownstreamMessage_SystemMessage_DisconnectedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownstreamMessage_SystemMessage_DisconnectedMessage) Reset() {
	*x = DownstreamMessage_SystemMessage_DisconnectedMessage{}
	mi := &file_webpubsub_client_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownstreamMessage_SystemMessage_DisconnectedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamMessage_SystemMessage_DisconnectedMessage) ProtoMessage() {}

func (x *DownstreamMessage_SystemMessage_DisconnectedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_webpubsub_client_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamMessage_SystemMessage_DisconnectedMessage.ProtoReflect.Descriptor instead.
func (*DownstreamMessage_SystemMessage_DisconnectedMessage) Descriptor() ([]byte, []int) {
	return file_webpubsub_client_proto_rawDescGZIP(), []int{1, 2, 1}
}

func (x *DownstreamMessage_SystemMessage_DisconnectedMessage) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_webpubsub_client_proto protoreflect.FileDescriptor

const file_webpubsub_client_proto_rawDesc = "" +
	"\n" +
	"\x16webpubsub.client.proto\x12\x0fazure.webpubsub\x1a\x19google/protobuf/any.proto\"\x97\b\n" +
	"\x0fUpstreamMessage\x12h\n" +
	"\x15send_to_group_message\x18\x01 \x01(\v23.azure.webpubsub.UpstreamMessage.SendToGroupMessageH\x00R\x12sendToGroupMessage\x12T\n" +
	"\revent_message\x18\x05 \x01(\v2-.azure.webpubsub.UpstreamMessage.EventMessageH\x00R\feventMessage\x12a\n" +
	"\x12join_group_message\x18\x06 \x01(\v21.azure.webpubsub.UpstreamMessage.JoinGroupMessageH\x00R\x10joinGroupMessage\x12d\n" +
	"\x13leave_group_message\x18\a \x01(\v22.azure.webpubsub.UpstreamMessage.LeaveGroupMessageH\x00R\x11leaveGroupMessage\x12g\n" +
	"\x14sequence_ack_message\x18\b \x01(\v23.azure.webpubsub.UpstreamMessage.SequenceAckMessageH\x00R\x12sequenceAckMessage\x1a\xad\x01\n" +
	"\x12SendToGroupMessage\x12\x14\n" +
	"\x05group\x18\x01 \x01(\tR\x05group\x12\x1a\n" +
	"\x06ack_id\x18\x02 \x01(\x03H\x00R\x05ackId\x88\x01\x01\x120\n" +
	"\x04data\x18\x03 \x01(\v2\x1c.azure.webpubsub.MessageDataR\x04data\x12\x1c\n" +
	"\ano_echo\x18\x04 \x01(\bH\x01R\x06noEcho\x88\x01\x01B\t\n" +
	"\a_ack_idB\n" +
	"\n" +
	"\b_no_echo\x1a}\n" +
	"\fEventMessage\x12\x14\n" +
	"\x05event\x18\x01 \x01(\tR\x05event\x120\n" +
	"\x04data\x18\x02 \x01(\v2\x1c.azure.webpubsub.MessageDataR\x04data\x12\x1a\n" +
	"\x06ack_id\x18\x03 \x01(\x03H\x00R\x05ackId\x88\x01\x01B\t\n" +
	"\a_ack_id\x1aO\n" +
	"\x10JoinGroupMessage\x12\x14\n" +
	"\x05group\x18\x01 \x01(\tR\x05group\x12\x1a\n" +
	"\x06ack_id\x18\x02 \x01(\x03H\x00R\x05ackId\x88\x01\x01B\t\n" +
	"\a_ack_id\x1aP\n" +
	"\x11LeaveGroupMessage\x12\x14\n" +
	"\x05group\x18\x01 \x01(\tR\x05group\x12\x1a\n" +
	"\x06ack_id\x18\x02 \x01(\x03H\x00R\x05ackId\x88\x01\x01B\t\n" +
	"\a_ack_id\x1a5\n" +
	"\x12SequenceAckMessage\x12\x1f\n" +
	"\vsequence_id\x18\x01 \x01(\x03R\n" +
	"sequenceIdB\t\n" +
	"\amessage\"\xea\b\n" +
	"\x11DownstreamMessage\x12P\n" +
	"\vack_message\x18\x01 \x01(\v2-.azure.webpubsub.DownstreamMessage.AckMessageH\x00R\n" +
	"ackMessage\x12S\n" +
	"\fdata_message\x18\x02 \x01(\v2..azure.webpubsub.DownstreamMessage.DataMessageH\x00R\vdataMessage\x12Y\n" +
	"\x0esystem_message\x18\x03 \x01(\v20.azure.webpubsub.DownstreamMessage.SystemMessageH\x00R\rsystemMessage\x1a\xdc\x01\n" +
	"\n" +
	"AckMessage\x12\x15\n" +
	"\x06ack_id\x18\x01 \x01(\x03R\x05ackId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12U\n" +
	"\x05error\x18\x03 \x01(\v2:.azure.webpubsub.DownstreamMessage.AckMessage.ErrorMessageH\x00R\x05error\x88\x01\x01\x1a<\n" +
	"\fErrorMessage\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessageB\b\n" +
	"\x06_error\x1a\xae\x01\n" +
	"\vDataMessage\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x19\n" +
	"\x05group\x18\x02 \x01(\tH\x00R\x05group\x88\x01\x01\x120\n" +
	"\x04data\x18\x03 \x01(\v2\x1c.azure.webpubsub.MessageDataR\x04data\x12$\n" +
	"\vsequence_id\x18\x04 \x01(\x03H\x01R\n" +
	"sequenceId\x88\x01\x01B\b\n" +
	"\x06_groupB\x0e\n" +
	"\f_sequence_id\x1a\xb7\x03\n" +
	"\rSystemMessage\x12p\n" +
	"\x11connected_message\x18\x01 \x01(\v2A.azure.webpubsub.DownstreamMessage.SystemMessage.ConnectedMessageH\x00R\x10connectedMessage\x12y\n" +
	"\x14disconnected_message\x18\x02 \x01(\v2D.azure.webpubsub.DownstreamMessage.SystemMessage.DisconnectedMessageH\x00R\x13disconnectedMessage\x1a\x7f\n" +
	"\x10ConnectedMessage\x12#\n" +
	"\rconnection_id\x18\x01 \x01(\tR\fconnectionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12-\n" +
	"\x12reconnection_token\x18\x03 \x01(\tR\x11reconnectionToken\x1a-\n" +
	"\x13DisconnectedMessage\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reasonB\t\n" +
	"\amessageB\t\n" +
	"\amessage\"\xb3\x01\n" +
	"\vMessageData\x12\x1d\n" +
	"\ttext_data\x18\x01 \x01(\tH\x00R\btextData\x12!\n" +
	"\vbinary_data\x18\x02 \x01(\fH\x00R\n" +
	"binaryData\x12;\n" +
	"\rprotobuf_data\x18\x03 \x01(\v2\x14.google.protobuf.AnyH\x00R\fprotobufData\x12\x1d\n" +
	"\tjson_data\x18\x04 \x01(\tH\x00R\bjsonDataB\x06\n" +
	"\x04dataB9Z\v./webpubsub\xaa\x02)Azure.Messaging.WebPubSub.Client.Protobufb\x06proto3"

var (
	file_webpubsub_client_proto_rawDescOnce sync.Once
	file_webpubsub_client_proto_rawDescData []byte
)

func file_webpubsub_client_proto_rawDescGZIP() []byte {
	file_webpubsub_client_proto_rawDescOnce.Do(func() {
		file_webpubsub_client_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_webpubsub_client_proto_rawDesc), len(file_webpubsub_client_proto_rawDesc)))
	})
	return file_webpubsub_client_proto_rawDescData
}

var file_webpubsub_client_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_webpubsub_client_proto_goTypes = []any{
	(*UpstreamMessage)(nil),                                     // 0: azure.webpubsub.UpstreamMessage
	(*DownstreamMessage)(nil),                                   // 1: azure.webpubsub.DownstreamMessage
	(*MessageData)(nil),                                         // 2: azure.webpubsub.MessageData
	(*UpstreamMessage_SendToGroupMessage)(nil),                  // 3: azure.webpubsub.UpstreamMessage.SendToGroupMessage
	(*UpstreamMessage_EventMessage)(nil),                        // 4: azure.webpubsub.UpstreamMessage.EventMessage
	(*UpstreamMessage_JoinGroupMessage)(nil),                    // 5: azure.webpubsub.UpstreamMessage.JoinGroupMessage
	(*UpstreamMessage_LeaveGroupMessage)(nil),                   // 6: azure.webpubsub.UpstreamMessage.LeaveGroupMessage
	(*UpstreamMessage_SequenceAckMessage)(nil),                  // 7: azure.webpubsub.UpstreamMessage.SequenceAckMessage
	(*DownstreamMessage_AckMessage)(nil),                        // 8: azure.webpubsub.DownstreamMessage.AckMessage
	(*DownstreamMessage_DataMessage)(nil),                       // 9: azure.webpubsub.DownstreamMessage.DataMessage
	(*DownstreamMessage_SystemMessage)(nil),                     // 10: azure.webpubsub.DownstreamMessage.SystemMessage
	(*DownstreamMessage_AckMessage_ErrorMessage)(nil),           // 11: azure.webpubsub.DownstreamMessage.AckMessage.ErrorMessage
	(*DownstreamMessage_SystemMessage_ConnectedMessage)(nil),    // 12: azure.webpubsub.DownstreamMessage.SystemMessage.ConnectedMessage
	(*DownstreamMessage_SystemMessage_DisconnectedMessage)(nil), // 13: azure.webpubsub.DownstreamMessage.SystemMessage.DisconnectedMessage
	(*anypb.Any)(nil),                                           // 14: google.protobuf.Any
}
var file_webpubsub_client_proto_depIdxs = []int32{
	3,  // 0: azure.webpubsub.UpstreamMessage.send_to_group_message:type_name -> azure.webpubsub.UpstreamMessage.SendToGroupMessage
	4,  // 1: azure.webpubsub.UpstreamMessage.event_message:type_name -> azure.webpubsub.UpstreamMessage.EventMessage
	5,  // 2: azure.webpubsub.UpstreamMessage.join_group_message:type_name -> azure.webpubsub.UpstreamMessage.JoinGroupMessage
	6,  // 3: azure.webpubsub.UpstreamMessage.leave_group_message:type_name -> azure.webpubsub.UpstreamMessage.LeaveGroupMessage
	7,  // 4: azure.webpubsub.UpstreamMessage.sequence_ack_message:type_name -> azure.webpubsub.UpstreamMessage.SequenceAckMessage
	8,  // 5: azure.webpubsub.DownstreamMessage.ack_message:type_name -> azure.webpubsub.DownstreamMessage.AckMessage
	9,  // 6: azure.webpubsub.DownstreamMessage.data_message:type_name -> azure.webpubsub.DownstreamMessage.DataMessage
	10, // 7: azure.webpubsub.DownstreamMessage.system_message:type_name -> azure.webpubsub.DownstreamMessage.SystemMessage
	14, // 8: azure.webpubsub.MessageData.protobuf_data:type_name -> google.protobuf.Any
	2,  // 9: azure.webpubsub.UpstreamMessage.SendToGroupMessage.data:type_name -> azure.webpubsub.MessageData
	2,  // 10: azure.webpubsub.UpstreamMessage.EventMessage.data:type_name -> azure.webpubsub.MessageData
	11, // 11: azure.webpubsub.DownstreamMessage.AckMessage.error:type_name -> azure.webpubsub.DownstreamMessage.AckMessage.ErrorMessage
	2,  // 12: azure.webpubsub.DownstreamMessage.DataMessage.data:type_name -> azure.webpubsub.MessageData
	12, // 13: azure.webpubsub.DownstreamMessage.SystemMessage.connected_message:type_name -> azure.webpubsub.DownstreamMessage.SystemMessage.ConnectedMessage
	13, // 14: azure.webpubsub.DownstreamMessage.SystemMessage.disconnected_message:type_name -> azure.webpubsub.DownstreamMessage.SystemMessage.DisconnectedMessage
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_webpubsub_client_proto_init() }
func file_webpubsub_client_proto_init() {
	if File_webpubsub_client_proto != nil {
		return
	}
	file_webpubsub_client_proto_msgTypes[0].OneofWrappers = []any{
		(*UpstreamMessage_SendToGroupMessage_)(nil),
		(*UpstreamMessage_EventMessage_)(nil),
		(*UpstreamMessage_JoinGroupMessage_)(nil),
		(*UpstreamMessage_LeaveGroupMessage_)(nil),
		(*UpstreamMessage_SequenceAckMessage_)(nil),
	}
	file_webpubsub_client_proto_msgTypes[1].OneofWrappers = []any{
		(*DownstreamMessage_AckMessage_)(nil),
		(*DownstreamMessage_DataMessage_)(nil),
		(*DownstreamMessage_SystemMessage_)(nil),
	}
	file_webpubsub_client_proto_msgTypes[2].OneofWrappers = []any{
		(*MessageData_TextData)(nil),
		(*MessageData_BinaryData)(nil),
		(*MessageData_ProtobufData)(nil),
		(*MessageData_JsonData)(nil),
	}
	file_webpubsub_client_proto_msgTypes[3].OneofWrappers = []any{}
	file_webpubsub_client_proto_msgTypes[4].OneofWrappers = []any{}
	file_webpubsub_client_proto_msgTypes[5].OneofWrappers = []any{}
	file_webpubsub_client_proto_msgTypes[6].OneofWrappers = []any{}
	file_webpubsub_client_proto_msgTypes[8].OneofWrappers = []any{}
	file_webpubsub_client_proto_msgTypes[9].OneofWrappers = []any{}
	file_webpubsub_client_proto_msgTypes[10].OneofWrappers = []any{
		(*DownstreamMessage_SystemMessage_ConnectedMessage_)(nil),
		(*DownstreamMessage_SystemMessage_DisconnectedMessage_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_webpubsub_client_proto_rawDesc), len(file_webpubsub_client_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_webpubsub_client_proto_goTypes,
		DependencyIndexes: file_webpubsub_client_proto_depIdxs,
		MessageInfos:      file_webpubsub_client_proto_msgTypes,
	}.Build()
	File_webpubsub_client_proto = out.File
	file_webpubsub_client_proto_goTypes = nil
	file_webpubsub_client_proto_depIdxs = nil
}
